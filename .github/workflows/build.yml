build_android:
    name: Build Android
    runs-on: ubuntu-latest
    env:
      ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk
      JAVA_HOME: /usr/lib/jvm/java-11-openjdk-amd64
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install Android SDK + NDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          cd $ANDROID_SDK_ROOT
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d cmdline-tools
          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/bin:$PATH
          yes | sdkmanager --sdk_root=$ANDROID_SDK_ROOT --licenses
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT "platform-tools" "platforms;android-29" "ndk;23.1.7779620"
          echo "ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/23.1.7779620" >> $GITHUB_ENV

      - name: Install Qt (Android)
        uses: jurplel/install-qt-action@v4
        with:
          version: '5.12.9'
          target: 'android'
          arch: 'android_arm64,android_armv7'

      - name: Build qmake (Android)
        run: |
          mkdir build-android && cd build-android
          /opt/Qt/*/android/bin/qmake ../vulkanCapsViewer.pro -spec android-clang CONFIG+=release
          make -j$(nproc)
          make apk
          ls -R android-build/outputs/

      - name: Upload to Release
        if: github.ref == 'refs/heads/master'
        run: |
          VERSION=$(date +%Y%m%d)
          APK_PATH=$(find build-android/android-build/outputs/apk -name "*.apk" | head -n1)
          echo "Found APK: $APK_PATH"
          gh release create v$VERSION "$APK_PATH" \
            --title "Android Build $VERSION" \
            --notes "Build Android Vulkan Caps Viewer"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
